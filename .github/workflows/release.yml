name: Release

on:
  push:
    tags: ["v*.*.*"]
    branches:
      - main
      - "release/*" # 支持所有 release 分支

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  Release-Build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-apple-darwin
        rustup_toolchain: [stable]
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: macos-14
            target: aarch64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整提交历史

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rustup_toolchain }}

      - name: Cargo build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Show version
        run: ./target/${{ matrix.target }}/release/gflow --version

      - name: Archive (UNIX)
        run: |
          mkdir -p artifacts
          cp -av target/${{ matrix.target }}/release/gflow artifacts/
          cp -av target/${{ matrix.target }}/release/gprj artifacts/

          # 统一使用分支名和短SHA命名制品
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
          tar -czf ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}-${SHORT_SHA}.tar.gz artifacts
        if: ${{ ! startsWith(matrix.os, 'windows') }}

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2
        continue-on-error: true
        with:
          subject-path: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}.*

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.target }}
          path: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}.*
          if-no-files-found: error
          retention-days: 7

  Release:
    needs: [Release-Build]
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Ensure artifacts dir exists
        run: mkdir -p artifacts

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Setup Release Parameters
        id: release_params
        run: |
          # 根据分支类型设置发布参数
          if [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
            echo "prerelease_flag=true" >> $GITHUB_OUTPUT
            echo "release_name=Beta Release (${{ github.ref_name }} - $(date +'%Y-%m-%d'))" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref}}" = "refs/heads/master" ]; then
            echo "prerelease_flag=false" >> $GITHUB_OUTPUT
            echo "release_name=Stable Release ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            # 标签发布保留原有逻辑
            echo "prerelease_flag=${{ contains(github.ref, '-pre') }}" >> $GITHUB_OUTPUT
            echo "release_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          name: ${{ steps.release_params.outputs.release_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          body: |
            ${{ steps.release_params.outputs.release_name }}

            Build commit: ${{ github.sha }}
            Build date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')

            All artifacts are signed with this repos identity using Sigstore.
            You can verify the signatures using the `GitHub` CLI.

            ```shell
            gh attestation verify --owner ${{ github.repository_owner }} <my-artifact>
            ```
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ steps.release_params.outputs.prerelease_flag }}
          files: artifacts/*
