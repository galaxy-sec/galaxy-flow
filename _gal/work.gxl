extern mod head { path = "./_gal/"; }

mod env  {
   env _common  : rust_env.init ,rust_env.release   {
    sudo      = "false";
    root      = ".";
    run       = "./run";
    target_name = "";
    prj_key   = "galaxy_flow" ;
    DIST_REPO = "unknow";

  }

  #[usage(desp="use debug ",color="blue")]
  env debug :  _common,rust_env.debug;


  #[usage(desp="default mamcos", color="green")]
  env default    : _common;
}

mod main   {
      bld_bins = "target/${ENV_BUILD_NAME}" ;
      prj_bins = "${ENV_ROOT}/bin" ;
      usr_bins = "${HOME}/bin" ;

    #[auto_load(entry)]
    flow __into  {
        DIST_REPO = "unkonw";
        gx.echo ( value: "${GXL_OS_SYS}" )
        if ${GXL_OS_SYS} =* "arm64_macos_*" {
            DIST_REPO = "macos";
        } else if ${GXL_OS_SYS} =* "x86_64_ubuntu*" {
            DIST_REPO = "ubuntu22";
        }
        else {
            DIST_REPO = "other";
        }

    }
    flow conf  {

      gx.echo ( "${ENV_PRJ_KEY}" );
      gx.echo ( "PRJ_BINS: ${MAIN_PRJ_BINS} " );
      gx.echo ( "USR_BIN : ${MAIN_USR_BINS} " );
      gx.echo ( "GXL_OS_SYS: ${GXL_OS_SYS} " );

      gx.echo (  "ENV_BUILD_FLAG :  ${ENV_BUILD_FLAG}  " );
      gx.echo (  "ENV_TARGET_FLAG : ${ENV_TARGET_FLAG} " );
      os.path (  "${ENV_RUN}"  );
    }


  #[usage(desp="use project cargo conf")]
  flow cargo_env {
    gx.cmd  ( cmd : "cp -f build/cargo.conf $CARGO_HOME/config" );
  }
  flow coverage : rust_flow.coverage ;

  #[usage(desp="build system")]
  flow build: ver.use ,conf , rust_flow.build : pub_local {
      os.path (  "${MAIN_USR_BINS}" );
      os.path (  "${MAIN_PRJ_BINS}" );
  }
  #[usage(desp="lint code")]
  flow lint : rust_flow.lint {} ;
  flow test : build : {
    gx.cmd ( "cargo test --all ${ENV_BUILD_FLAG}", log : "1" , out:"true"  );
  }
  flow sys_test : main.build : {
    gx.cmd ( "cargo test --test sys_tests  --all-features  ${ENV_BUILD_FLAG}", log : "1" , out:"true"  );
  }

  flow pub_local   {

    os.path (  "${MAIN_USR_BINS}" );
    os.path (  "${MAIN_PRJ_BINS}" );
    gx.cmd  (  "rm -f ${MAIN_PRJ_BINS}/r*"  );
    gx.cmd (  "cp ${MAIN_BLD_BINS}/g* ${MAIN_PRJ_BINS}/"  );
    gx.cmd (  "cp ${MAIN_PRJ_BINS}/g* ${MAIN_USR_BINS}/"  );
  }
  flow _pub_gsys: : _pub_dysec {
    UP_TARGET = "gsys";
  }
  flow _pub_gmod: : _pub_dysec {
    UP_TARGET = "gmod";
  }
  flow _pub_gflow: : _pub_dysec {
    UP_TARGET = "gflow";
  }
  flow _pub_gprj: : _pub_dysec {
    UP_TARGET = "gprj";
  }
  flow pub_dysec  : _pub_gflow,_pub_gprj,_pub_gmod,_pub_gsys ;

  flow _pub_dysec :ver.use {
    gx.echo (  "pub ${UP_TARGET} to dysec " );
    gx.upload (
        url : "https://dy-sec-generic.pkg.coding.net/galaxy-open/${DIST_REPO}/${UP_TARGET}?version=${VERSION}",
        username : "${SEC_GFLOW_LOGIN}",
        method : "PUT",
        password : "${SEC_GFLOW_PASSWORD}",
        local_file : "./${MAIN_BLD_BINS}/${UP_TARGET}"
    );
  }

}
