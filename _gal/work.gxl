extern mod head,ai { path = "${GXL_START_ROOT}/_gal/"; }

mod envs  {
   env _common  : rust_env.init   {
    root      = ".";
    target_name = "";
    prj_key   = "galaxy_flow" ;
    DIST_REPO = "unknow";
    AFT_PREFIX = "g";

  }

  #[usage(desp="use debug ",color="blue")]
  env debug :  _common,rust_env.debug {
    AFT_PREFIX = "d" ;
  }
  #[usage(desp="use debug ",color="blue")]
  env release :  _common,rust_env.release{
    AFT_PREFIX = "g" ;
  }


  #[usage(desp="default mamcos", color="green")]
  env default    : envs._common,debug;
}

mod main : ai_git {
      bld_bins = "target/${ENV_BUILD_NAME}" ;
      rls_bins = "target/release" ;
      HOME_BIN = "${HOME}/bin" ;

    #[auto_load(entry)]
    flow __into  {
        DIST_REPO = "unkonw";
        if defined(${GXL_OS_SYS}) {
             gx.echo (  "${GXL_OS_SYS} is defined " )
        }
        if ${GXL_OS_SYS} =* "arm64_macos_*" {
            DIST_REPO = "macos";
        } else if ${GXL_OS_SYS} =* "x86_64_ubuntu*" {
            DIST_REPO = "ubuntu22";
        }
        else {
            DIST_REPO = "other";
        }

    }
    #[task(name="config")]
    flow conf  {

      gx.echo ( "HOME_BIN : ${MAIN_HOME_BIN} " );

      gx.echo (  "ENV_BUILD_FLAG :  ${ENV_BUILD_FLAG}  " );
      gx.echo (  "ENV_TARGET_FLAG : ${ENV_TARGET_FLAG} " );
      gx.cmd (  " hostname " , out : "false" );
    }


  #[usage(desp="use project cargo conf")]
  flow cargo_env {
    gx.cmd  ( cmd : "cp -f build/cargo.conf $CARGO_HOME/config" );
  }
  flow coverage : rust_flow.coverage ;

  #[task(name="${ENV_PRJ_KEY}@build")]
  flow ver.use | conf | rust_flow.build | @build | pub_local {
      gx.echo(  "${MAIN_HOME_BIN}" );
      //os.path (  "${MAIN_HOME_BIN}" );
  }
  #[usage(desp="lint code")]
  flow lint | rust_flow.lint {} ;

  #[task(name="test")]
  flow build |  @test  {
    gx.cmd ( "cargo test --all ${ENV_BUILD_FLAG}", log : "1" , out:"true"  );
  }
  flow  main.build | @sys_test {
    gx.cmd ( "cargo test --test sys_tests  --all-features  ${ENV_BUILD_FLAG}", log : "1" , out:"true"  );
  }

  flow debug_ut  {
    gx.cmd ( "RUST_LOG=debug cargo test ${GXL_CMD_ARG} -- --nocapture ", log : "1" , out:"true"  );
  }

  #[task(name="pub to local")]
  flow pub_local   {

    AP = "${ENV_AFT_PREFIX}";
    gx.cmd (  "mkdir -p ${MAIN_HOME_BIN}" );
    gx.cmd (  "cp ${MAIN_BLD_BINS}/gflow ${MAIN_HOME_BIN}/${AP}flow"  );
    gx.cmd (  "cp ${MAIN_BLD_BINS}/gprj ${MAIN_HOME_BIN}/${AP}prj"  );
  }


}
